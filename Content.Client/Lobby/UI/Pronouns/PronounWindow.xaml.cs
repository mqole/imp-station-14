using Content.Client.UserInterface.Controls;
using Content.Shared.CCVar;
using Content.Shared.Preferences;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Configuration;
using Robust.Shared.Enums;
using Robust.Shared.GameObjects.Components.Localization;
using Robust.Shared.Player;

namespace Content.Client.Lobby.UI.Pronouns;

[GenerateTypedNameReferences]
public sealed partial class PronounWindow : FancyWindow
{
    public HumanoidCharacterProfile Profile;

    // CCvar
    private bool _showAdditionalPronouns;
    private bool _restrictedPronouns;
    private int _pronounLength;

    public PronounWindow(HumanoidCharacterProfile profile, Pronoun pronouns, Gender? profileGender, ICommonSession session, IDependencyCollection collection)
    {
        RobustXamlLoader.Load(this);
        Profile = profile;
        var configManager = collection.Resolve<IConfigurationManager>();

        _showAdditionalPronouns = configManager.GetCVar(CCVars.ShowAdditionalPronouns);
        _restrictedPronouns = configManager.GetCVar(CCVars.RestrictedPronouns);
        _pronounLength = configManager.GetCVar(CCVars.MaxPronounLength);

        var gender = profileGender ?? Gender.Epicene;
        SubjectLine.PlaceHolder = $"{{Loc {{SUBJECT({gender}}}}}";
        ObjectLine.PlaceHolder = $"{{Loc {{OBJECT({gender}}}}}";
        DatObjLine.PlaceHolder = $"{{Loc {{DATOBJ({gender}}}}}";
        GenitiveLine.PlaceHolder = $"{{Loc {{GENITIVE({gender}}}}}";
        PossAdjLine.PlaceHolder = $"{{Loc {{POSSADJ({gender}}}}}";
        PossPronounLine.PlaceHolder = $"{{Loc {{POSSPRONOUN({gender}}}}}";
        ReflexiveLine.PlaceHolder = $"{{Loc {{REFLEXIVE({gender}}}}}";
        CounterLine.PlaceHolder = $"{{Loc {{COUNTER({gender}}}}}";

        SubjectLine.OnTextChanged += args => { SetPronoun(args.Text, "subject"); };
        ObjectLine.OnTextChanged += args => { SetPronoun(args.Text, "object"); };
        DatObjLine.OnTextChanged += args => { SetPronoun(args.Text, "datObj"); };
        GenitiveLine.OnTextChanged += args => { SetPronoun(args.Text, "genitive"); };
        PossAdjLine.OnTextChanged += args => { SetPronoun(args.Text, "possAdj"); };
        PossPronounLine.OnTextChanged += args => { SetPronoun(args.Text, "possPronoun"); };
        ReflexiveLine.OnTextChanged += args => { SetPronoun(args.Text, "reflexive"); };
        CounterLine.OnTextChanged += args => { SetPronoun(args.Text, "counter"); };


        PluralOption.AddItem(Loc.GetString("humanoid-profile-editor-pronouns-plural-option-singular"));
        PluralOption.AddItem(Loc.GetString("humanoid-profile-editor-pronouns-plural-option-plural"));

        PluralOption.OnItemSelected += args =>
        {
            PluralOption.SelectId(args.Id);
            SetPlural(args.Id);
        };
    }

    private void SetPronoun(string input, string type)
    {
        Profile = Profile?.WithPronouns(pronoun);
    }

    private void SetPlural(int plurality)
    {

    }
}
